{"ast":null,"code":"var _jsxFileName = \"/home/helinala/Documents/Yliopisto/Fullstack2023/repo/osa7/bloglist/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport Blog from './components/Blog';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport storageService from './services/storage';\nimport LoginForm from './components/Login';\nimport NewBlog from './components/NewBlog';\nimport Notification from './components/Notification';\nimport Togglable from './components/Togglable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  const [user, setUser] = useState('');\n  const [info, setInfo] = useState({\n    message: null\n  });\n  const blogFormRef = useRef();\n  useEffect(() => {\n    const user = storageService.loadUser();\n    setUser(user);\n  }, []);\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs));\n  }, []);\n  const notifyWith = function (message) {\n    let type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'info';\n    setInfo({\n      message,\n      type\n    });\n    setTimeout(() => {\n      setInfo({\n        message: null\n      });\n    }, 3000);\n  };\n  const login = async (username, password) => {\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      setUser(user);\n      storageService.saveUser(user);\n      notifyWith('welcome!');\n    } catch (e) {\n      notifyWith('wrong username or password', 'error');\n    }\n  };\n  const logout = async () => {\n    setUser(null);\n    storageService.removeUser();\n    notifyWith('logged out');\n  };\n  const createBlog = async newBlog => {\n    const createdBlog = await blogService.create(newBlog);\n    notifyWith(`A new blog '${newBlog.title}' by '${newBlog.author}' added`);\n    setBlogs(blogs.concat(createdBlog));\n    blogFormRef.current.toggleVisibility();\n  };\n  const like = async blog => {\n    const blogToUpdate = {\n      ...blog,\n      likes: blog.likes + 1,\n      user: blog.user.id\n    };\n    const updatedBlog = await blogService.update(blogToUpdate);\n    notifyWith(`A like for the blog '${blog.title}' by '${blog.author}'`);\n    setBlogs(blogs.map(b => b.id === blog.id ? updatedBlog : b));\n  };\n  const remove = async blog => {\n    const ok = window.confirm(`Sure you want to remove '${blog.title}' by ${blog.author}`);\n    if (ok) {\n      await blogService.remove(blog.id);\n      notifyWith(`The blog' ${blog.title}' by '${blog.author} removed`);\n      setBlogs(blogs.filter(b => b.id !== blog.id));\n    }\n  };\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"log in to application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Notification, {\n        info: info\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoginForm, {\n        login: login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n  const byLikes = (b1, b2) => b2.likes - b1.likes;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"blogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      info: info\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [user.name, \" logged in\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logout,\n        children: \"logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Togglable, {\n      buttonLabel: \"new note\",\n      ref: blogFormRef,\n      children: /*#__PURE__*/_jsxDEV(NewBlog, {\n        createBlog: createBlog\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: blogs.sort(byLikes).map(blog => /*#__PURE__*/_jsxDEV(Blog, {\n        blog: blog,\n        like: () => like(blog),\n        canRemove: user && blog.user.username === user.username,\n        remove: () => remove(blog)\n      }, blog.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"dzizGFioLHAXodClp+oWADkJhVo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useRef","Blog","blogService","loginService","storageService","LoginForm","NewBlog","Notification","Togglable","jsxDEV","_jsxDEV","App","_s","blogs","setBlogs","user","setUser","info","setInfo","message","blogFormRef","loadUser","getAll","then","notifyWith","type","arguments","length","undefined","setTimeout","login","username","password","saveUser","e","logout","removeUser","createBlog","newBlog","createdBlog","create","title","author","concat","current","toggleVisibility","like","blog","blogToUpdate","likes","id","updatedBlog","update","map","b","remove","ok","window","confirm","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","byLikes","b1","b2","name","onClick","buttonLabel","ref","sort","canRemove","_c","$RefreshReg$"],"sources":["/home/helinala/Documents/Yliopisto/Fullstack2023/repo/osa7/bloglist/frontend/src/App.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport storageService from './services/storage'\n\nimport LoginForm from './components/Login'\nimport NewBlog from './components/NewBlog'\nimport Notification from './components/Notification'\nimport Togglable from './components/Togglable'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [user, setUser] = useState('')\n  const [info, setInfo] = useState({ message: null })\n\n  const blogFormRef = useRef()\n\n  useEffect(() => {\n    const user = storageService.loadUser()\n    setUser(user)\n  }, [])\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )\n  }, [])\n\n  const notifyWith = (message, type='info') => {\n    setInfo({\n      message, type\n    })\n\n    setTimeout(() => {\n      setInfo({ message: null } )\n    }, 3000)\n  }\n\n  const login = async (username, password) => {\n    try {\n      const user = await loginService.login({ username, password })\n      setUser(user)\n      storageService.saveUser(user)\n      notifyWith('welcome!')\n    } catch(e) {\n      notifyWith('wrong username or password', 'error')\n    }\n  }\n\n  const logout = async () => {\n    setUser(null)\n    storageService.removeUser()\n    notifyWith('logged out')\n  }\n\n  const createBlog = async (newBlog) => {\n    const createdBlog = await blogService.create(newBlog)\n    notifyWith(`A new blog '${newBlog.title}' by '${newBlog.author}' added`)\n    setBlogs(blogs.concat(createdBlog))\n    blogFormRef.current.toggleVisibility()\n  }\n\n  const like = async (blog) => {\n    const blogToUpdate = { ...blog, likes: blog.likes + 1, user: blog.user.id }\n    const updatedBlog = await blogService.update(blogToUpdate)\n    notifyWith(`A like for the blog '${blog.title}' by '${blog.author}'`)\n    setBlogs(blogs.map(b => b.id === blog.id ? updatedBlog : b))\n  }\n\n  const remove = async (blog) => {\n    const ok = window.confirm(`Sure you want to remove '${blog.title}' by ${blog.author}`)\n    if (ok) {\n      await blogService.remove(blog.id)\n      notifyWith(`The blog' ${blog.title}' by '${blog.author} removed`)\n      setBlogs(blogs.filter(b => b.id !== blog.id))\n    }\n\n  }\n\n  if (!user) {\n    return (\n      <div>\n        <h2>log in to application</h2>\n        <Notification info={info} />\n        <LoginForm login={login} />\n      </div>\n    )\n  }\n\n  const byLikes = (b1, b2) => b2.likes - b1.likes\n\n  return (\n    <div>\n      <h2>blogs</h2>\n      <Notification info={info} />\n      <div>\n        {user.name} logged in\n        <button onClick={logout}>logout</button>\n      </div>\n      <Togglable buttonLabel='new note' ref={blogFormRef}>\n        <NewBlog createBlog={createBlog} />\n      </Togglable>\n      <div>\n        {blogs.sort(byLikes).map(blog =>\n          <Blog\n            key={blog.id}\n            blog={blog}\n            like={() => like(blog)}\n            canRemove={user && blog.user.username===user.username}\n            remove={() => remove(blog)}\n          />\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default App"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,WAAW,MAAM,kBAAkB;AAC1C,OAAOC,YAAY,MAAM,kBAAkB;AAC3C,OAAOC,cAAc,MAAM,oBAAoB;AAE/C,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,SAAS,MAAM,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACmB,IAAI,EAAEC,OAAO,CAAC,GAAGpB,QAAQ,CAAC;IAAEqB,OAAO,EAAE;EAAK,CAAC,CAAC;EAEnD,MAAMC,WAAW,GAAGpB,MAAM,EAAE;EAE5BD,SAAS,CAAC,MAAM;IACd,MAAMgB,IAAI,GAAGX,cAAc,CAACiB,QAAQ,EAAE;IACtCL,OAAO,CAACD,IAAI,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAENhB,SAAS,CAAC,MAAM;IACdG,WAAW,CAACoB,MAAM,EAAE,CAACC,IAAI,CAACV,KAAK,IAC7BC,QAAQ,CAAED,KAAK,CAAE,CAClB;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMW,UAAU,GAAG,SAAAA,CAACL,OAAO,EAAkB;IAAA,IAAhBM,IAAI,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,MAAM;IACtCR,OAAO,CAAC;MACNC,OAAO;MAAEM;IACX,CAAC,CAAC;IAEFI,UAAU,CAAC,MAAM;MACfX,OAAO,CAAC;QAAEC,OAAO,EAAE;MAAK,CAAC,CAAE;IAC7B,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMW,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IAC1C,IAAI;MACF,MAAMjB,IAAI,GAAG,MAAMZ,YAAY,CAAC2B,KAAK,CAAC;QAAEC,QAAQ;QAAEC;MAAS,CAAC,CAAC;MAC7DhB,OAAO,CAACD,IAAI,CAAC;MACbX,cAAc,CAAC6B,QAAQ,CAAClB,IAAI,CAAC;MAC7BS,UAAU,CAAC,UAAU,CAAC;IACxB,CAAC,CAAC,OAAMU,CAAC,EAAE;MACTV,UAAU,CAAC,4BAA4B,EAAE,OAAO,CAAC;IACnD;EACF,CAAC;EAED,MAAMW,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzBnB,OAAO,CAAC,IAAI,CAAC;IACbZ,cAAc,CAACgC,UAAU,EAAE;IAC3BZ,UAAU,CAAC,YAAY,CAAC;EAC1B,CAAC;EAED,MAAMa,UAAU,GAAG,MAAOC,OAAO,IAAK;IACpC,MAAMC,WAAW,GAAG,MAAMrC,WAAW,CAACsC,MAAM,CAACF,OAAO,CAAC;IACrDd,UAAU,CAAE,eAAcc,OAAO,CAACG,KAAM,SAAQH,OAAO,CAACI,MAAO,SAAQ,CAAC;IACxE5B,QAAQ,CAACD,KAAK,CAAC8B,MAAM,CAACJ,WAAW,CAAC,CAAC;IACnCnB,WAAW,CAACwB,OAAO,CAACC,gBAAgB,EAAE;EACxC,CAAC;EAED,MAAMC,IAAI,GAAG,MAAOC,IAAI,IAAK;IAC3B,MAAMC,YAAY,GAAG;MAAE,GAAGD,IAAI;MAAEE,KAAK,EAAEF,IAAI,CAACE,KAAK,GAAG,CAAC;MAAElC,IAAI,EAAEgC,IAAI,CAAChC,IAAI,CAACmC;IAAG,CAAC;IAC3E,MAAMC,WAAW,GAAG,MAAMjD,WAAW,CAACkD,MAAM,CAACJ,YAAY,CAAC;IAC1DxB,UAAU,CAAE,wBAAuBuB,IAAI,CAACN,KAAM,SAAQM,IAAI,CAACL,MAAO,GAAE,CAAC;IACrE5B,QAAQ,CAACD,KAAK,CAACwC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACJ,EAAE,KAAKH,IAAI,CAACG,EAAE,GAAGC,WAAW,GAAGG,CAAC,CAAC,CAAC;EAC9D,CAAC;EAED,MAAMC,MAAM,GAAG,MAAOR,IAAI,IAAK;IAC7B,MAAMS,EAAE,GAAGC,MAAM,CAACC,OAAO,CAAE,4BAA2BX,IAAI,CAACN,KAAM,QAAOM,IAAI,CAACL,MAAO,EAAC,CAAC;IACtF,IAAIc,EAAE,EAAE;MACN,MAAMtD,WAAW,CAACqD,MAAM,CAACR,IAAI,CAACG,EAAE,CAAC;MACjC1B,UAAU,CAAE,aAAYuB,IAAI,CAACN,KAAM,SAAQM,IAAI,CAACL,MAAO,UAAS,CAAC;MACjE5B,QAAQ,CAACD,KAAK,CAAC8C,MAAM,CAACL,CAAC,IAAIA,CAAC,CAACJ,EAAE,KAAKH,IAAI,CAACG,EAAE,CAAC,CAAC;IAC/C;EAEF,CAAC;EAED,IAAI,CAACnC,IAAI,EAAE;IACT,oBACEL,OAAA;MAAAkD,QAAA,gBACElD,OAAA;QAAAkD,QAAA,EAAI;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAC9BtD,OAAA,CAACH,YAAY;QAACU,IAAI,EAAEA;MAAK;QAAA4C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAC5BtD,OAAA,CAACL,SAAS;QAACyB,KAAK,EAAEA;MAAM;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACvB;EAEV;EAEA,MAAMC,OAAO,GAAGA,CAACC,EAAE,EAAEC,EAAE,KAAKA,EAAE,CAAClB,KAAK,GAAGiB,EAAE,CAACjB,KAAK;EAE/C,oBACEvC,OAAA;IAAAkD,QAAA,gBACElD,OAAA;MAAAkD,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACdtD,OAAA,CAACH,YAAY;MAACU,IAAI,EAAEA;IAAK;MAAA4C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC5BtD,OAAA;MAAAkD,QAAA,GACG7C,IAAI,CAACqD,IAAI,EAAC,YACX,eAAA1D,OAAA;QAAQ2D,OAAO,EAAElC,MAAO;QAAAyB,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACpC,eACNtD,OAAA,CAACF,SAAS;MAAC8D,WAAW,EAAC,UAAU;MAACC,GAAG,EAAEnD,WAAY;MAAAwC,QAAA,eACjDlD,OAAA,CAACJ,OAAO;QAAC+B,UAAU,EAAEA;MAAW;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzB,eACZtD,OAAA;MAAAkD,QAAA,EACG/C,KAAK,CAAC2D,IAAI,CAACP,OAAO,CAAC,CAACZ,GAAG,CAACN,IAAI,iBAC3BrC,OAAA,CAACT,IAAI;QAEH8C,IAAI,EAAEA,IAAK;QACXD,IAAI,EAAEA,CAAA,KAAMA,IAAI,CAACC,IAAI,CAAE;QACvB0B,SAAS,EAAE1D,IAAI,IAAIgC,IAAI,CAAChC,IAAI,CAACgB,QAAQ,KAAGhB,IAAI,CAACgB,QAAS;QACtDwB,MAAM,EAAEA,CAAA,KAAMA,MAAM,CAACR,IAAI;MAAE,GAJtBA,IAAI,CAACG,EAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAKZ;IACH;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAAApD,EAAA,CAzGKD,GAAG;AAAA+D,EAAA,GAAH/D,GAAG;AA2GT,eAAeA,GAAG;AAAA,IAAA+D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}